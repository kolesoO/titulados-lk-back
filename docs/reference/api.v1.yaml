openapi: 3.0.0
info:
  title: API
  version: '1.0'
  description: ''
servers:
  - url: 'http://localhost:3000'
paths:
  /api/v1/login:
    post:
      summary: Login
      tags:
        - authentification
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                  api_token:
                    type: string
              examples:
                example:
                  value:
                    data:
                      id: 7
                      created_at: '2020-08-03T18:02:44.000000Z'
                      updated_at: '2020-08-27T19:01:23.000000Z'
                      email: qwe@qwe.ru
                      phone: '12345'
                      surname: surname value
                      name: name value
                      last_name: last_name value
                      city: city value1
                      picture: null
                      settings:
                        send_new_orders_info:
                          code: send_new_orders_info
                          value: true
                          caption: user.settings.send_new_orders_info
                        dont_call:
                          code: dont_call
                          value: true
                          caption: user.settings.dont_call
                        faculties:
                          code: faculties
                          value:
                            - 1
                          caption: user.settings.faculties
                      type: 0
                      deleted_at: null
                    api_token: skkZz1G0sQF2nlNQjQAqRClXEH10LhDvGZf54tV4yMNIPy4BlIMPFMUg0IXn
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: array
                    items: {}
                  password:
                    type: array
                    items: {}
              examples:
                example:
                  value:
                    email:
                      - The email field is required.
                    password:
                      - The password field is required.
      operationId: post-api-v1-login
      description: Login for existing user
      parameters:
        - schema:
            type: string
          in: header
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            examples:
              example:
                value:
                  email: test@test.ru
                  password: '123'
  /api/v1/me:
    post:
      summary: user info update
      tags:
        - user info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
              examples:
                example:
                  value:
                    data:
                      id: 7
                      created_at: '2020-08-03T18:02:44.000000Z'
                      updated_at: '2020-08-27T19:01:23.000000Z'
                      email: qwe@qwe.ru
                      phone: '12345'
                      surname: surname value
                      name: name value
                      last_name: last_name value
                      city: city value1
                      picture: null
                      settings:
                        send_new_orders_info:
                          code: send_new_orders_info
                          value: true
                          caption: user.settings.send_new_orders_info
                        dont_call:
                          code: dont_call
                          value: true
                          caption: user.settings.dont_call
                        faculties:
                          code: faculties
                          value:
                            - 1
                          caption: user.settings.faculties
                      type: 0
                      deleted_at: null
      operationId: post-api-v1-me
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: string
                surname:
                  type: string
                name:
                  type: string
                last_name:
                  type: string
                city:
                  type: string
                settings:
                  $ref: '#/components/schemas/UserSettings'
            examples:
              example:
                value:
                  email: qwe@qwe.ru
                  phone: '12345'
                  surname: surname value
                  name: name value
                  last_name: last_name value
                  city: city value1
                  settings:
                    send_new_orders_info: true
                    dont_call: true
                    faculties:
                      - 1
                      - 2
                      - 3
    get:
      summary: user info
      tags:
        - user info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
              examples:
                example:
                  value:
                    data:
                      id: 7
                      created_at: '2020-08-03T18:02:44.000000Z'
                      updated_at: '2020-08-27T19:04:17.000000Z'
                      email: qwe@qwe.ru
                      phone: '12345'
                      surname: surname value
                      name: name value
                      last_name: last_name value
                      city: city value1
                      picture: null
                      settings:
                        send_new_orders_info:
                          code: send_new_orders_info
                          value: true
                          caption: user.settings.send_new_orders_info
                        dont_call:
                          code: dont_call
                          value: true
                          caption: user.settings.dont_call
                        faculties:
                          code: faculties
                          value:
                            - 1
                          caption: user.settings.faculties
                      type: 0
                      deleted_at: null
                      student_info:
                        id: 3
                        university: university value 1
                        course: course value 1
                        user_id: 7
                      teacher_info: null
                      password_update:
                        id: 6
                        created_at: '2020-08-23T20:44:21.000000Z'
                        user_id: 7
      operationId: get-api-v1-me
      description: ''
  /api/v1/change-password:
    post:
      summary: user password
      tags:
        - user info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
              examples:
                example:
                  value:
                    data:
                      id: 7
                      created_at: '2020-08-03T18:02:44.000000Z'
                      updated_at: '2020-08-27T19:04:17.000000Z'
                      email: qwe@qwe.ru
                      phone: '12345'
                      surname: surname value
                      name: name value
                      last_name: last_name value
                      city: city value1
                      picture: null
                      settings:
                        send_new_orders_info:
                          code: send_new_orders_info
                          value: true
                          caption: user.settings.send_new_orders_info
                        dont_call:
                          code: dont_call
                          value: true
                          caption: user.settings.dont_call
                        faculties:
                          code: faculties
                          value:
                            - 1
                          caption: user.settings.faculties
                      type: 0
                      deleted_at: null
                      student_info:
                        id: 3
                        university: university value 1
                        course: course value 1
                        user_id: 7
                      teacher_info: null
                      password_update:
                        id: 6
                        created_at: '2020-08-23T20:44:21.000000Z'
                        user_id: 7
      operationId: post-api-v1-change-password
      description: Change user password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
              required:
                - password
            examples:
              example:
                value:
                  password: '123'
  /api/v1/subject-group:
    get:
      summary: Subject group list
      tags:
        - faculty
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Subject-group'
              examples:
                example:
                  value:
                    data:
                      - id: 1
                        created_at: '2020-09-04T14:05:35.000000Z'
                        updated_at: '2020-09-04T14:05:35.000000Z'
                        caption: maths
                        subjects:
                          - id: 1
                            created_at: '2020-09-04T14:24:42.000000Z'
                            caption: subject of maths 1
                            group_id: 1
      operationId: get-api-v1-faculty
      description: Get subject group list
    post:
      summary: Create Subject group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subject-group'
              examples:
                example:
                  value:
                    data:
                      caption: maths3
                      updated_at: '2020-09-04T15:04:23.000000Z'
                      created_at: '2020-09-04T15:04:23.000000Z'
                      id: 3
                      subjects: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  caption:
                    type: string
              examples:
                example:
                  value:
                    caption:
                      - The caption field is required.
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: post-api-v1-faculty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                caption:
                  type: string
              required:
                - caption
            examples:
              example:
                value:
                  caption: some caption
          application/javascript:
            schema:
              type: object
              properties:
                caption:
                  type: string
              required:
                - caption
            examples:
              example:
                value:
                  caption: some caption
      description: Create new subject group
      tags:
        - subjects
    parameters: []
  /api/v1/my/orders:
    get:
      summary: Order list
      tags:
        - orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
              examples:
                example:
                  value:
                    data:
                      - id: 1
                        created_at: '2020-08-30T09:42:37.000000Z'
                        updated_at: '2020-08-30T09:42:37.000000Z'
                        deadline: '2020-08-29 12:44:48'
                        name: name value
                        type: type value
                        course: course value
                        description: description value
                        price: 1000
                        student_id: 1
                        teacher_id: null
                        parts:
                          - id: 1
                            created_at: '2020-08-30T09:42:37.000000Z'
                            updated_at: '2020-08-30T09:42:37.000000Z'
                            name: 1 часть
                            status_message: some message
                            status: 0
                            order_id: 1
                            docs: []
                        files: []
                        readiness: 75
                      - id: 2
                        created_at: '2020-08-30T09:43:34.000000Z'
                        updated_at: '2020-08-30T09:43:34.000000Z'
                        deadline: '2020-08-29 12:44:48'
                        name: name value 2
                        type: type value
                        course: course value
                        description: description value
                        price: 2000
                        student_id: 1
                        teacher_id: null
                        parts:
                          - id: 2
                            created_at: '2020-08-30T09:43:34.000000Z'
                            updated_at: '2020-08-30T09:43:34.000000Z'
                            name: 1 часть
                            status: 0
                            status_message: some message
                            order_id: 2
                            docs: []
                        files: []
                        readiness: 75
                      - id: 3
                        created_at: '2020-08-30T09:47:51.000000Z'
                        updated_at: '2020-08-30T09:47:51.000000Z'
                        deadline: '2020-08-29 12:44:48'
                        name: name value 3
                        type: type value
                        course: course value
                        description: description value
                        price: 2000
                        student_id: 1
                        teacher_id: null
                        parts:
                          - id: 3
                            created_at: '2020-08-30T09:47:51.000000Z'
                            updated_at: '2020-08-30T09:47:51.000000Z'
                            name: 1 часть
                            status: 0
                            status_message: some message
                            order_id: 3
                            docs: []
                        files: []
                        readiness: 75
      operationId: get-api-v1-my-orders
      description: Get order list for user
    post:
      summary: Create order
      operationId: post-api-v1-my-orders
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
              examples:
                example:
                  value:
                    data:
                      deadline: '2020-08-29 12:44:48'
                      name: name value 3
                      type: type value
                      course: course value
                      description: description value
                      price: '2000'
                      student_id: 1
                      updated_at: '2020-08-30T09:47:51.000000Z'
                      created_at: '2020-08-30T09:47:51.000000Z'
                      id: 3
                      student:
                        id: 1
                        university: null
                        course: null
                        user_id: 1
                      parts:
                        - id: 3
                          created_at: '2020-08-30T09:47:51.000000Z'
                          updated_at: '2020-08-30T09:47:51.000000Z'
                          name: 1 часть
                          status_message: some message
                          status: 0
                          order_id: 3
                          docs: []
                      files: []
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example:
                  value:
                    deadline:
                      - The deadline field is required.
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deadline:
                  type: string
                name:
                  type: string
                type:
                  type: string
                course:
                  type: string
                description:
                  type: string
                price:
                  type: string
            examples:
              example:
                value:
                  deadline: '2020-08-29 12:44:48'
                  name: name value
                  type: type value
                  course: course value
                  description: description value
                  price: '1000'
  '/api/v1/my/orders/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: order id
    post:
      summary: update my order by id
      tags:
        - orders
      responses: {}
      operationId: post-api-v1-my-orders-id
    get:
      summary: get my order by id
      tags:
        - orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
              examples:
                example:
                  value:
                    data:
                      id: 1
                      created_at: '2020-08-30T09:42:37.000000Z'
                      updated_at: '2020-08-30T09:42:37.000000Z'
                      deadline: '2020-08-29 12:44:48'
                      name: name value
                      type: type value
                      course: course value
                      description: description value
                      price: 1000
                      student_id: 1
                      teacher_id: null
                      parts:
                        - id: 1
                          created_at: '2020-08-30T09:42:37.000000Z'
                          updated_at: '2020-08-30T09:42:37.000000Z'
                          name: 1 часть
                          status: 0
                          status_message: some message
                          order_id: 1
                          docs: []
                      files: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example:
                  value:
                    message: "No query results for model [App\\Models\\Order] 4"
      operationId: get-api-v1-my-orders-id
  '/api/v1/my/orders/{orderId}/parts/{partId}/docs':
    parameters:
      - schema:
          type: string
        name: orderId
        in: path
        required: true
      - schema:
          type: string
        name: partId
        in: path
        required: true
    get:
      summary: get order docs
      tags:
        - order docs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/File'
              examples:
                example:
                  value:
                    data:
                      - id: 1
                        create_at: '2020-08-29 12:44:47'
                        updated_at: '2020-08-29 12:44:47'
                        size: 1000
                        content_type: image/png
                        path: /usr/local/etc.ext
                      - id: 2
                        create_at: '2020-08-29 12:44:47'
                        updated_at: '2020-08-29 12:44:47'
                        size: 1000
                        content_type: image/png
                        path: /usr/local/etc.ext
      operationId: get-api-v1-my-orders-orderId-parts-partId-docs
    post:
      summary: create order doc
      tags:
        - order docs
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/File'
              examples:
                example:
                  value:
                    data:
                      id: 1
                      create_at: '2020-08-29 12:44:47'
                      updated_at: '2020-08-29 12:44:47'
                      size: 1000
                      content_type: image/png
                      path: /usr/local/etc.ext
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example:
                  value:
                    attachment:
                      - The attachment field is required.
      operationId: post-api-v1-my-orders-orderId-parts-partId-docs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                attachment:
                  type: string
              required:
                - attachment
            examples:
              example:
                value:
                  commnent: some comment
                  attachment: '<binnary_file_content>'
  '/api/v1/subject-group/{groupId}':
    parameters:
      - schema:
          type: string
        name: groupId
        in: path
        required: true
    get:
      summary: Subject group item info
      tags:
        - subjects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subject-group'
              examples:
                example:
                  value:
                    data:
                      id: 1
                      created_at: '2020-09-04T14:05:35.000000Z'
                      updated_at: '2020-09-04T14:05:35.000000Z'
                      caption: maths
                      subjects:
                        - id: 1
                          created_at: '2020-09-04T14:24:42.000000Z'
                          caption: subject of maths 1
                          group_id: 1
      operationId: get-api-v1-subject-group-groupId
      description: Get subject group element info
  '/api/v1/subject-group/{groupId}/subject':
    parameters:
      - schema:
          type: string
        name: groupId
        in: path
        required: true
    get:
      summary: Get subjects of group
      tags:
        - subjects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Subject'
              examples:
                example:
                  value:
                    data:
                      - id: 1
                        created_at: '2020-09-04T14:24:42.000000Z'
                        caption: subject of maths 1
                        group_id: 1
      operationId: get-api-v1-subject-group-groupId-subject
    post:
      summary: Greate subject of group
      tags:
        - subjects
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subject'
              examples:
                example:
                  value:
                    data:
                      caption: subject of maths2
                      group_id: 1
                      created_at: '2020-09-04T15:09:46.000000Z'
                      id: 2
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example:
                  value:
                    caption:
                      - The caption field is required.
      operationId: post-api-v1-subject-group-groupId-subject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                caption:
                  type: string
              required:
                - caption
            examples:
              example:
                value:
                  caption: some caption
components:
  schemas:
    User:
      title: User
      type: object
      x-examples:
        example:
          id: 7
          created_at: '2020-08-03T18:02:44.000000Z'
          updated_at: '2020-08-27T19:01:23.000000Z'
          email: qwe@qwe.ru
          phone: '12345'
          surname: surname value
          name: name value
          last_name: last_name value
          city: city value1
          picture: null
          settings:
            send_new_orders_info:
              code: send_new_orders_info
              value: true
              caption: user.settings.send_new_orders_info
            dont_call:
              code: dont_call
              value: true
              caption: user.settings.dont_call
            faculties:
              code: faculties
              value:
                - 1
              caption: user.settings.faculties
          type: 0
          deleted_at: null
    UserSettings:
      title: UserSettings
      type: object
      properties:
        send_new_orders_info:
          type: boolean
        dont_call:
          type: boolean
        faculties:
          type: array
          items:
            type: integer
      x-examples:
        example:
          send_new_orders_info: true
          dont_call: true
          faculties:
            - 1
            - 2
            - 3
    Order:
      title: Order
      type: object
      x-examples:
        example:
          deadline: '2020-08-29 12:44:48'
          name: name value 2
          type: type value
          course: course value
          description: description value
          price: '2000'
          student_id: 1
          updated_at: '2020-08-30T09:43:34.000000Z'
          created_at: '2020-08-30T09:43:34.000000Z'
          id: 2
          student:
            id: 1
            university: null
            course: null
            user_id: 1
          parts:
            - id: 2
              created_at: '2020-08-30T09:43:34.000000Z'
              updated_at: '2020-08-30T09:43:34.000000Z'
              name: 1 часть
              status: 0
              status_message: some message
              order_id: 2
              docs: []
          files: []
          readiness: 75
    OrderDoc:
      title: OrderDoc
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
        file:
          type: string
    File:
      title: File
      type: object
      x-examples:
        example:
          id: 1
          create_at: '2020-08-29 12:44:47'
          updated_at: '2020-08-29 12:44:47'
          size: 1000
          content_type: image/png
          path: /usr/local/etc.ext
      properties:
        id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
        size:
          type: number
        content_type:
          type: string
        path:
          type: string
    Subject:
      title: Subject
      type: object
      x-examples:
        example:
          id: 1
          created_at: '2020-09-04T14:24:42.000000Z'
          caption: subject of maths 1
          group_id: 1
      properties:
        id:
          type: integer
        created_at:
          type: string
        caption:
          type: string
        group_id:
          type: integer
    Subject-group:
      title: Subject-group
      type: object
      x-examples:
        example:
          id: 1
          created_at: '2020-09-04T14:05:35.000000Z'
          updated_at: '2020-09-04T14:05:35.000000Z'
          caption: maths
          subjects:
            - id: 1
              created_at: '2020-09-04T14:24:42.000000Z'
              caption: subject of maths 1
              group_id: 1
      properties:
        id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
        caption:
          type: string
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/Subject'
